package org.hum.socks.v6.common;

import java.io.UnsupportedEncodingException;
import java.util.Arrays;

import org.hum.socks.v6.common.util.Utils;

import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.Channel;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.ChannelInboundHandlerAdapter;
import io.netty.util.ReferenceCountUtil;

public class EncryptPipeChannelHandler2 extends ChannelInboundHandlerAdapter {

	private String name;
	private Channel pipeChannel;

	public EncryptPipeChannelHandler2(String name, Channel channel) {
		this.name = name;
		this.pipeChannel = channel;
	}
	@Override
	public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {
		try {
			if (pipeChannel.isActive()) {
				ByteBuf bytebuff = (ByteBuf) msg;
				if (!bytebuff.hasArray()) {
					int len = bytebuff.readableBytes();
					byte[] arr = new byte[len];
					System.out.println("reading.....");
					bytebuff.getBytes(0, arr);
					try {
						System.out.println("[enc][" + len + "], arr=" + Arrays.toString(arr));
						byte[] encrypt = Utils.encrypt(arr);
						len = encrypt.length;
						ByteBuf buf = Unpooled.buffer(encrypt.length + 4); // +4是int长度
						buf.writeInt(encrypt.length);
						buf.writeBytes(encrypt);
						pipeChannel.writeAndFlush(buf);
					} catch (Exception e) {
						System.out.println(name + " error, len=" + len);
						e.printStackTrace();
					}
				}
			}
		} finally {
			ReferenceCountUtil.release(msg);
		}
	}
	
	public void testHttpRequest() throws UnsupportedEncodingException {
		/**
		 * 1.访问 http://172.16.219.129/index.html (HTTPS连接的tcp都是加密过的)
		 * 2.返回 { 71, 69, 84, 32, 47, 105, 110, 100, 101, 120, 46, 104, 116, 109, 108, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 72, 111, 115, 116, 58, 32, 49, 55, 50, 46, 49, 54, 46, 50, 49, 57, 46, 49, 50, 57, 13, 10, 85, 115, 101, 114, 45, 65, 103, 101, 110, 116, 58, 32, 77, 111, 122, 105, 108, 108, 97, 47, 53, 46, 48, 32, 40, 77, 97, 99, 105, 110, 116, 111, 115, 104, 59, 32, 73, 110, 116, 101, 108, 32, 77, 97, 99, 32, 79, 83, 32, 88, 32, 49, 48, 46, 49, 50, 59, 32, 114, 118, 58, 54, 50, 46, 48, 41, 32, 71, 101, 99, 107, 111, 47, 50, 48, 49, 48, 48, 49, 48, 49, 32, 70, 105, 114, 101, 102, 111, 120, 47, 54, 50, 46, 48, 13, 10, 65, 99, 99, 101, 112, 116, 58, 32, 116, 101, 120, 116, 47, 104, 116, 109, 108, 44, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 104, 116, 109, 108, 43, 120, 109, 108, 44, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 109, 108, 59, 113, 61, 48, 46, 57, 44, 42, 47, 42, 59, 113, 61, 48, 46, 56, 13, 10, 65, 99, 99, 101, 112, 116, 45, 76, 97, 110, 103, 117, 97, 103, 101, 58, 32, 122, 104, 45, 67, 78, 44, 122, 104, 59, 113, 61, 48, 46, 56, 44, 122, 104, 45, 84, 87, 59, 113, 61, 48, 46, 55, 44, 122, 104, 45, 72, 75, 59, 113, 61, 48, 46, 53, 44, 101, 110, 45, 85, 83, 59, 113, 61, 48, 46, 51, 44, 101, 110, 59, 113, 61, 48, 46, 50, 13, 10, 65, 99, 99, 101, 112, 116, 45, 69, 110, 99, 111, 100, 105, 110, 103, 58, 32, 103, 122, 105, 112, 44, 32, 100, 101, 102, 108, 97, 116, 101, 13, 10, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 58, 32, 107, 101, 101, 112, 45, 97, 108, 105, 118, 101, 13, 10, 85, 112, 103, 114, 97, 100, 101, 45, 73, 110, 115, 101, 99, 117, 114, 101, 45, 82, 101, 113, 117, 101, 115, 116, 115, 58, 32, 49, 13, 10, 73, 102, 45, 77, 111, 100, 105, 102, 105, 101, 100, 45, 83, 105, 110, 99, 101, 58, 32, 70, 114, 105, 44, 32, 50, 49, 32, 68, 101, 99, 32, 50, 48, 49, 56, 32, 48, 57, 58, 51, 49, 58, 51, 53, 32, 71, 77, 84, 13, 10, 67, 97, 99, 104, 101, 45, 67, 111, 110, 116, 114, 111, 108, 58, 32, 109, 97, 120, 45, 97, 103, 101, 61, 48, 13, 10, 13, 10}
		 * 3.编码后
		 * <pre>
		 *  GET /index.html HTTP/1.1
		 * 	Host: 172.16.219.129
		 * 	User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:62.0) Gecko/20100101 Firefox/62.0
		 * 	Accept: text/html,application/xhtml+xml,application/xml;q=0.9, * /*;q=0.8
		 * 	Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
		 * 	Accept-Encoding: gzip, deflate
		 * 	Connection: keep-alive
		 * 	Upgrade-Insecure-Requests: 1
		 * 	If-Modified-Since: Fri, 21 Dec 2018 09:31:35 GMT
		 * 	Cache-Control: max-age=0
		 * </pre>
		 */
		byte[] bytes = new byte[] { 71, 69, 84, 32, 47, 105, 110, 100, 101, 120, 46, 104, 116, 109, 108, 32, 72, 84, 84, 80, 47, 49, 46, 49, 13, 10, 72, 111, 115, 116, 58, 32, 49, 55, 50, 46, 49, 54, 46, 50, 49, 57, 46, 49, 50, 57, 13, 10, 85, 115, 101, 114, 45, 65, 103, 101, 110, 116, 58, 32, 77, 111, 122, 105, 108, 108, 97, 47, 53, 46, 48, 32, 40, 77, 97, 99, 105, 110, 116, 111, 115, 104, 59, 32, 73, 110, 116, 101, 108, 32, 77, 97, 99, 32, 79, 83, 32, 88, 32, 49, 48, 46, 49, 50, 59, 32, 114, 118, 58, 54, 50, 46, 48, 41, 32, 71, 101, 99, 107, 111, 47, 50, 48, 49, 48, 48, 49, 48, 49, 32, 70, 105, 114, 101, 102, 111, 120, 47, 54, 50, 46, 48, 13, 10, 65, 99, 99, 101, 112, 116, 58, 32, 116, 101, 120, 116, 47, 104, 116, 109, 108, 44, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 104, 116, 109, 108, 43, 120, 109, 108, 44, 97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 109, 108, 59, 113, 61, 48, 46, 57, 44, 42, 47, 42, 59, 113, 61, 48, 46, 56, 13, 10, 65, 99, 99, 101, 112, 116, 45, 76, 97, 110, 103, 117, 97, 103, 101, 58, 32, 122, 104, 45, 67, 78, 44, 122, 104, 59, 113, 61, 48, 46, 56, 44, 122, 104, 45, 84, 87, 59, 113, 61, 48, 46, 55, 44, 122, 104, 45, 72, 75, 59, 113, 61, 48, 46, 53, 44, 101, 110, 45, 85, 83, 59, 113, 61, 48, 46, 51, 44, 101, 110, 59, 113, 61, 48, 46, 50, 13, 10, 65, 99, 99, 101, 112, 116, 45, 69, 110, 99, 111, 100, 105, 110, 103, 58, 32, 103, 122, 105, 112, 44, 32, 100, 101, 102, 108, 97, 116, 101, 13, 10, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 58, 32, 107, 101, 101, 112, 45, 97, 108, 105, 118, 101, 13, 10, 85, 112, 103, 114, 97, 100, 101, 45, 73, 110, 115, 101, 99, 117, 114, 101, 45, 82, 101, 113, 117, 101, 115, 116, 115, 58, 32, 49, 13, 10, 73, 102, 45, 77, 111, 100, 105, 102, 105, 101, 100, 45, 83, 105, 110, 99, 101, 58, 32, 70, 114, 105, 44, 32, 50, 49, 32, 68, 101, 99, 32, 50, 48, 49, 56, 32, 48, 57, 58, 51, 49, 58, 51, 53, 32, 71, 77, 84, 13, 10, 67, 97, 99, 104, 101, 45, 67, 111, 110, 116, 114, 111, 108, 58, 32, 109, 97, 120, 45, 97, 103, 101, 61, 48, 13, 10, 13, 10};
		System.out.println(new String(bytes, "utf-8"));
	}

	public static void main(String[] args) throws UnsupportedEncodingException {
		/**
		 * 	HTTP/1.1 304 Not Modified
		 *	Server: nginx/1.1.19
		 *	Date: Fri, 21 Dec 2018 09:47:45 GMT
		 *	Last-Modified: Fri, 21 Dec 2018 09:31:35 GMT
		 *	Connection: keep-alive
		 */
		byte[] bytes = new byte[] { 72, 84, 84, 80, 47, 49, 46, 49, 32, 51, 48, 52, 32, 78, 111, 116, 32, 77, 111, 100, 105, 102, 105, 101, 100, 13, 10, 83, 101, 114, 118, 101, 114, 58, 32, 110, 103, 105, 110, 120, 47, 49, 46, 49, 46, 49, 57, 13, 10, 68, 97, 116, 101, 58, 32, 70, 114, 105, 44, 32, 50, 49, 32, 68, 101, 99, 32, 50, 48, 49, 56, 32, 48, 57, 58, 52, 55, 58, 52, 53, 32, 71, 77, 84, 13, 10, 76, 97, 115, 116, 45, 77, 111, 100, 105, 102, 105, 101, 100, 58, 32, 70, 114, 105, 44, 32, 50, 49, 32, 68, 101, 99, 32, 50, 48, 49, 56, 32, 48, 57, 58, 51, 49, 58, 51, 53, 32, 71, 77, 84, 13, 10, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 58, 32, 107, 101, 101, 112, 45, 97, 108, 105, 118, 101, 13, 10, 13, 10 };
		System.out.println(new String(bytes, "utf-8"));
	}
}
